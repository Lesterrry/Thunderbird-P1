
#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
#include         <SoftwareSerial.h>                   //  Подключаем библиотеку для работы по программной шине UART
#include         <Adafruit_Thermal.h>                 //  Подключаем библиотеку для работы с принтером
SoftwareSerial   mySerial(1, 2);                      //  Объявляем объект библиотеки SoftwareSerial, указывая задействованные выводы Arduino (RX=5-зелёный, TX=6-синий). Можно назначить другие выводы Arduino
Adafruit_Thermal printer(&mySerial);                  //  Объявляем объект библиотеки Adafruit_Thermal, указывая ссылку на созданный ранее объект mySerial библиотеки SoftwareSerial
char*            RUS(char*);      


//#include <DS3231.h>


// Init the DS3231 using the hardware interface
//DS3231  rtc(SDA, SCL);



static const uint8_t PROGMEM logo  [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x40, 0x40, 0x40, 0x00, 0x40, 0x40, 0x40, 0x40, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00,
0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
0x40, 0x00, 0x00, 0x03, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x40, 0x07, 0x3F, 0x3F,
0x3F, 0x3F, 0x7F, 0x3F, 0x00, 0x00, 0x00, 0x07, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x00,
0x00, 0x07, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x40, 0x0F, 0x3F, 0x3F, 0x3F, 0x3F,
0x7F, 0x3F, 0x00, 0x00, 0x00, 0x0F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x00, 0x00, 0x0F,
0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x5F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F,
0x00, 0x00, 0x00, 0x1F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x40, 0x00, 0x1F, 0x3F, 0x3F,
0x3F, 0x7F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x00, 0x00,
0x00, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x40, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F,
0x3F, 0x3F, 0x00, 0x00, 0x01, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x00, 0x00, 0x01, 0x3F,
0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x40, 0x01, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F,
0x00, 0x00, 0x03, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x00, 0x03, 0x3F, 0x3F, 0x3F,
0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x43, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x00, 0x00,
0x07, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x00, 0x07, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F,
0x3F, 0x3F, 0x00, 0x00, 0x47, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x00, 0x00, 0x07, 0x3F,
0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x00, 0x0F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F,
0x00, 0x00, 0x4F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x3F,
0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x40, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x00, 0x00,
0x1F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F,
0x3F, 0x3F, 0x00, 0x40, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x00, 0x00, 0x3F, 0x7F,
0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F,
0x3C, 0x78, 0x30, 0x30, 0x2C, 0x20, 0x30, 0x78, 0x30, 0x30, 0x2C, 0x20, 0x30, 0x78, 0x30, 0x30,
0x2C, 0x20, 0x30, 0x78, 0x30, 0x30, 0x2C, 0x20, 0x30, 0x78, 0x30, 0x30, 0x2C, 0x20, 0x30, 0x78,
0x30, 0x30, 0x2C, 0x0D, 0x0A, 0x30, 0x78, 0x30, 0x30, 0x2C
};




void setup()
{
      mySerial.begin(9600);                             //  Инициируем передачу данных по программной шине UART на скорости 9600. Функцию begin объекта mySerial нужно вызвать до вызова функции begin объекта printer!
    printer.begin();  

  lcd.begin(16,2);
  // Setup Serial connection
  Serial.begin(9600);
  // Uncomment the next line if you are using an Arduino Leonardo
  //while (!Serial) {}
  
  // Initialize the rtc object
//  rtc.begin();
  
  // The following lines can be uncommented to set the date and time
 // rtc.setDOW(WEDNESDAY);     // Set Day-of-Week to SUNDAY
 // rtc.setTime(13, 57, 0);     // Set the time to 12:00:00 (24hr format)
  //rtc.setDate(25, 7, 2019);   // Set the date to January 1st, 2014
pinMode(10, OUTPUT);
  digitalWrite(10,HIGH);
 
}

void loop()
{
  // Send Day-of-Week
/*
  lcd.setCursor(0,0);
  lcd.print(rtc.getTimeStr());
lcd.setCursor(14,0);
  lcd.print(rtc.getDateStr());
  */
  
  // Wait one second before repeating :)
  delay (1000);
  lcd.clear();

  int keyAnalog =  analogRead(A0);
  if (keyAnalog < 100 ) {
    // Значение меньше 100 – нажата кнопка right
    // Выполняем какое-то действие для кнопки вправо.
    digitalWrite(10,LOW);
  } else if (keyAnalog < 200) {
    
    // Значение больше 100 (иначе мы бы вошли в предыдущий блок результата сравнения, но меньше 200 – нажата кнопка UP
    // Выполняем какое-то действие для кнопки вверх
  } else if (keyAnalog < 400 ) {
    // Значение больше 200, но меньше 400 – нажата кнопка DOWN
    // Выполняем действие для кнопки вниз
  } else if (keyAnalog < 600) {
    digitalWrite(10,HIGH);
    // Значение больше 400, но меньше 600 – нажата кнопка LEFT
    // Выполняем действие для кнопки влево
  } else if (keyAnalog < 800) {
    printer.setSize('L');
    printer.println("INIT");               
    printer.feed(3);   
    // Значение больше 600, но меньше 800 – нажата кнопка SELECT
    // Выполняем действие для кнопки выбора пункта меню
  } else {
    // Все остальные значения (до 1023) будут означать, что нажатий не было
  }
}
